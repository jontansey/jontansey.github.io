{"version":3,"sources":["themes/lightTheme/lightTheme.tsx","themes/globalStyles.tsx","themes/customThemeProvider.tsx","themes/lightTheme/index.ts","themes/index.tsx","reduxRoot/rootReducer.ts","store/store.ts","common/components/textArea/textArea.tsx","common/components/button/button.tsx","features/todoLists/components/todo/todo.tsx","constants/firebase.ts","common/components/panel/panel.tsx","features/todoLists/components/todoList/todoList.tsx","features/todoLists/todoLists.tsx","features/auth/login/login.tsx","routing.tsx","common/components/header/header.tsx","App.tsx","serviceWorker.js","index.js"],"names":["lightTheme","colors","surface","textOnSurface","primary","textOnPrimary","secondary","textOnSecondary","black","white","grey50","grey100","grey200","grey300","grey400","grey500","grey600","grey700","grey800","fonts","family","atImportUrl","GlobalStyle","createGlobalStyle","theme","CustomThemeProvider","children","history","createBrowserHistory","basename","process","composeEnhancers","composeWithDevTools","rootReducer","combineReducers","router","connectRouter","firebase","firebaseReducer","firestore","firestoreReducer","TextArea","styled","textarea","Button","button","Todo","todo","parentId","id","content","done","useFirestore","updateTodo","set","modifiedDate","Date","StyledTodo","CheckboxWrapper","Checkbox","type","checked","onChange","icon","faCheckSquare","faSquare","size","value","updateText","currentTarget","placeholder","onClick","delete","faTimes","div","span","input","Panel","StyledPanel","ContentWrapper","role","TodoList","todoList","name","useFirestoreConnect","collection","doc","subcollections","orderBy","storeAs","todos","useSelector","ordered","partition","xs","lg","xl","ListHeader","Title","Actions","add","createdDate","faPlus","map","key","length","Delete","h3","TodoLists","todoLists","useState","listName","setListName","addList","a","created","fluid","md","offset","disabled","isLoaded","tl","Login","useFirebase","uiConfig","signInFlow","signInSuccessUrl","signInOptions","fb","GoogleAuthProvider","PROVIDER_ID","EmailAuthProvider","firebaseAuth","auth","Routing","window","frameElement","path","isEmpty","Header","authReady","StyledHeader","InnerHeader","User","faUser","displayName","logout","faSignOutAlt","h1","store","createStore","applyMiddleware","routerMiddleware","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","rrfProps","config","userProfile","useFirestoreForProfile","dispatch","createFirestoreInstance","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e66217f0.chunk.js","sourcesContent":["import { DefaultTheme } from \"styled-components\";\r\n\r\n//named Colors\r\n\r\n/*Primary*/\r\nconst blue = \"#2ea3f2\";\r\n\r\n/*Secondary*/\r\nconst pink = \"#ff0189\";\r\n\r\n/*Shades*/\r\nconst white = \"#ffffff\";\r\nconst black = \"#212121\";\r\n\r\nconst grey50 = \"#fafafa\";\r\nconst grey100 = \"#f5f5f5\";\r\nconst grey200 = \"#eeeeee\";\r\nconst grey300 = \"#e0e0e0\";\r\nconst grey400 = \"#bdbdbd\";\r\nconst grey500 = \"#9e9e9e\";\r\nconst grey600 = \"#757575\";\r\nconst grey700 = \"#616161\";\r\nconst grey800 = \"#212121\";\r\n\r\nconst lightTheme: DefaultTheme = {\r\n  colors: {\r\n    /*Surface*/\r\n    surface: white,\r\n    textOnSurface: black,\r\n\r\n    /*Primary*/\r\n    primary: blue,\r\n    textOnPrimary: white,\r\n\r\n    /*Secondary*/\r\n    secondary: pink,\r\n    textOnSecondary: white,\r\n\r\n    /*Neutrals*/\r\n    black,\r\n    white,\r\n\r\n    grey50,\r\n    grey100,\r\n    grey200,\r\n    grey300,\r\n    grey400,\r\n    grey500,\r\n    grey600,\r\n    grey700,\r\n    grey800\r\n  },\r\n  fonts: {\r\n    family: \"Open Sans, sans-serif\",\r\n    atImportUrl:\r\n      \"https://fonts.googleapis.com/css?family=Open+Sans:400,700&display=swap\"\r\n  }\r\n};\r\n\r\nexport { lightTheme };\r\n","import { createGlobalStyle } from \"styled-components\";\r\nexport const GlobalStyle = createGlobalStyle`\r\n\r\n*,\r\n*:before,\r\n*:after {\r\n  box-sizing: border-box;\r\n}\r\n\r\nhtml {\r\n  @import url(${({ theme }) => theme.fonts.atImportUrl});\r\n  font-family: ${({ theme }) => theme.fonts.family};\r\n  text-size-adjust: 100%;\r\n  box-sizing: border-box;\r\n  font-size: 16px;\r\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n}\r\n\r\nbody {\r\n  margin: 0;\r\n  font-size: 16px;\r\n  color:  ${({ theme }) => theme.colors.black};\r\n  background: ${({ theme }) => theme.colors.white};\r\n  min-height: 100vh;\r\n}\r\n\r\nsmall{\r\n  font-size: 0.8rem\r\n}\r\n\r\nh1{\r\n  font-size: 2rem;\r\n}\r\n\r\nh2{\r\n  font-size: 1.8rem\r\n}\r\n\r\nh3{\r\n  font-size: 1.6rem\r\n}\r\n\r\nh4{\r\n  font-size: 1.4rem\r\n}\r\n\r\nh5{\r\n  font-size: 1.2rem\r\n}\r\n\r\nh6{\r\n  font-size: 1rem\r\n}\r\n\r\narticle,\r\naside,\r\ndetails,\r\nfigcaption,\r\nfigure,\r\nfooter,\r\nheader,\r\nhgroup,\r\nmain,\r\nmenu,\r\nnav,\r\nsection,\r\nsummary {\r\n  display: block;\r\n}\r\n\r\naudio,\r\ncanvas,\r\nprogress,\r\nvideo {\r\n  display: inline-block;\r\n  vertical-align: baseline;\r\n}\r\n\r\naudio:not([controls]) {\r\n  display: none;\r\n  height: 0;\r\n}\r\n\r\n[hidden],\r\ntemplate {\r\n  display: none;\r\n}\r\n\r\na {\r\n  background-color: transparent;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  text-decoration: none;\r\n  \r\n  &:active {\r\n    outline: 0;\r\n  }\r\n\r\n  &:hover {\r\n    outline: 0;\r\n  }\r\n}\r\n\r\nabbr[title],\r\nabbr[data-original-title] {\r\n  cursor: help;\r\n  border-bottom: 1px dotted;\r\n}\r\n\r\nb,\r\nstrong {\r\n  font-weight: bold;\r\n}\r\n\r\ndfn {\r\n  font-style: italic;\r\n}\r\n\r\nmark {\r\n  background: #ff0;\r\n  color: #000;\r\n}\r\n\r\nsub,\r\nsup {\r\n  font-size: 75%;\r\n  line-height: 0;\r\n  position: relative;\r\n  vertical-align: baseline;\r\n}\r\n\r\nsup {\r\n  top: -0.5em;\r\n}\r\n\r\nsub {\r\n  bottom: -0.25em;\r\n}\r\n\r\nimg {\r\n  border: none;\r\n  vertical-align: middle;\r\n}\r\n\r\nsvg:not(:root) {\r\n  overflow: hidden;\r\n}\r\n\r\nfigure {\r\n  margin: 0 0 10px;\r\n}\r\n\r\nhr {\r\n  box-sizing: content-box;\r\n  height: 0;\r\n}\r\n\r\npre {\r\n  overflow: auto;\r\n}\r\n\r\ncode,\r\nkbd,\r\npre,\r\nsamp {\r\n  font-family: monospace, monospace;\r\n  font-size: 1em;\r\n}\r\n\r\nbutton,\r\ninput,\r\noptgroup,\r\nselect,\r\ntextarea {\r\n  color: inherit;\r\n  font: inherit;\r\n  margin: 0;\r\n}\r\n\r\nbutton {\r\n  overflow: visible;\r\n}\r\n\r\nselect {\r\n  text-transform: none;\r\n}\r\n\r\nbutton,\r\nhtml input[type=\"button\"],\r\ninput[type=\"reset\"],\r\ninput[type=\"submit\"] {\r\n  cursor: pointer;\r\n}\r\n\r\nbutton[disabled],\r\nhtml input[disabled] {\r\n  cursor: not-allowed;\r\n}\r\n\r\nbutton::-moz-focus-inner,\r\ninput::-moz-focus-inner {\r\n  border: none;\r\n  padding: 0;\r\n}\r\n\r\ninput {\r\n  line-height: normal;\r\n}\r\n\r\ninput[type=\"checkbox\"],\r\ninput[type=\"radio\"] {\r\n  box-sizing: border-box;\r\n  padding: 0;\r\n}\r\n\r\ninput[type=\"number\"]::-webkit-inner-spin-button,\r\ninput[type=\"number\"]::-webkit-outer-spin-button {\r\n  height: auto;\r\n}\r\n\r\ninput[type=\"search\"] {\r\n  -webkit-appearance: textfield;\r\n}\r\n\r\ninput[type=\"search\"]::-webkit-search-cancel-button,\r\ninput[type=\"search\"]::-webkit-search-decoration {\r\n  -webkit-appearance: none;\r\n}\r\n\r\nfieldset {\r\n  border: 1px solid #c0c0c0;\r\n  margin: 0 2px;\r\n  padding: 0.35em 0.625em 0.75em;\r\n}\r\n\r\nlegend {\r\n  border: none;\r\n  padding: 0;\r\n}\r\n\r\ntextarea {\r\n  overflow: auto;\r\n}\r\n\r\noptgroup {\r\n  font-weight: bold;\r\n}\r\n\r\ntable {\r\n  border-collapse: collapse;\r\n  border-spacing: 0;\r\n}\r\n\r\ntd,\r\nth {\r\n  padding: 5px;\r\n}\r\n::selection {\r\n  background: #b3d4fc;\r\n  text-shadow: none;\r\n}\r\n`;\r\n","// component-lib/ThemeProvider.js\r\nimport React from \"react\";\r\nimport { ThemeProvider, DefaultTheme } from \"styled-components\";\r\nimport { lightTheme } from \"./lightTheme\";\r\nimport { GlobalStyle } from \"./globalStyles\";\r\n\r\ninterface IProps {\r\n  theme?: DefaultTheme;\r\n  children: React.ReactChild;\r\n}\r\n\r\nexport const CustomThemeProvider: React.FC<IProps> = ({\r\n  theme = lightTheme,\r\n  children\r\n}) => (\r\n  <ThemeProvider theme={theme}>\r\n    <>\r\n      <GlobalStyle />\r\n      {children}\r\n    </>\r\n  </ThemeProvider>\r\n);\r\n","export * from \"./lightTheme\";\r\nexport * from \"../customThemeProvider\";\r\n","export * from \"./lightTheme\";\r\nexport * from \"./defaultTheme\";\r\n","import { connectRouter } from \"connected-react-router\";\r\nimport { combineReducers, Reducer } from \"redux\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\n\r\nexport const makeRootReducer = (history: any) =>\r\n  combineReducers({\r\n    router: connectRouter(history),\r\n    firebase: firebaseReducer as Reducer<any>,\r\n    firestore: firestoreReducer as Reducer<any>\r\n  });\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { routerMiddleware } from \"connected-react-router\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport { makeRootReducer } from \"../reduxRoot\";\r\n\r\nexport const history = createBrowserHistory({\r\n  basename: process.env.PUBLIC_URL\r\n});\r\n\r\nconst composeEnhancers = composeWithDevTools({});\r\n\r\nexport const rootReducer = makeRootReducer(history);\r\n\r\nexport default function configureStore() {\r\n  const store = createStore(\r\n    rootReducer,\r\n    {},\r\n    composeEnhancers(applyMiddleware(routerMiddleware(history)))\r\n  );\r\n\r\n  return store;\r\n}\r\n\r\nexport type TAppState = ReturnType<typeof rootReducer>;\r\n","import styled from \"styled-components\";\r\n\r\nexport const TextArea = styled.textarea`\r\n  border: none;\r\n  display: flex;\r\n  flex: 1;\r\n  padding: 5px;\r\n  height: 35px;\r\n  margin: 5px;\r\n  word-break: break-word;\r\n  resize: none;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Button = styled.button`\r\n  -webkit-appearance: none;\r\n  cursor: pointer;\r\n  position: relative;\r\n  backface-visibility: hidden;\r\n\r\n  border: 1px solid ${({ theme }) => theme.colors.primary};\r\n  outline: none !important;\r\n  height: 35px;\r\n\r\n  padding: 3px 10px;\r\n  border-radius: 3px;\r\n  box-shadow: 0 5px 15px 0 rgba(0, 0, 0, 0.1);\r\n  margin: 5px;\r\n\r\n  color: ${({ theme }) => theme.colors.textOnPrimary};\r\n  background: ${({ theme }) => theme.colors.primary};\r\n\r\n  transition: all 0.28s cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:hover {\r\n    box-shadow: 0 5px 15px 0 rgba(0, 0, 0, 0.25);\r\n  }\r\n\r\n  &:disabled {\r\n    background-color: ${({ theme }) => theme.colors.grey300};\r\n    border-color: ${({ theme }) => theme.colors.grey300};\r\n    color: ${({ theme }) => theme.colors.black};\r\n    box-shadow: none;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { TTodo } from \"../../../../types\";\r\nimport { useFirestore } from \"react-redux-firebase\";\r\nimport {\r\n  FIREBASE_COLLECTION_LISTS,\r\n  FIREBASE_COLLECTION_TODOS\r\n} from \"../../../../constants/firebase\";\r\n\r\nimport { TextArea } from \"../../../../common/components/textArea\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faSquare, faCheckSquare } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { Button } from \"../../../../common/components/button\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface props {\r\n  parentId: string;\r\n  todo: TTodo;\r\n}\r\n\r\nexport const Todo: React.FC<props> = ({ todo, parentId }) => {\r\n  const { id, content, done } = todo;\r\n\r\n  const firestore = useFirestore();\r\n\r\n  const deleteTodo = () => {\r\n    firestore.delete(\r\n      `${FIREBASE_COLLECTION_LISTS}/${parentId}/${FIREBASE_COLLECTION_TODOS}/${id}`\r\n    );\r\n  };\r\n\r\n  const updateTodo = (todo: TTodo) => {\r\n    firestore.set(\r\n      `${FIREBASE_COLLECTION_LISTS}/${parentId}/${FIREBASE_COLLECTION_TODOS}/${id}`,\r\n      { ...todo, modifiedDate: new Date() }\r\n    );\r\n  };\r\n\r\n  const toggleDone = () => updateTodo({ ...todo, done: !done });\r\n\r\n  const updateText = (content: string) => updateTodo({ ...todo, content });\r\n\r\n  return (\r\n    <StyledTodo done={done}>\r\n      <CheckboxWrapper>\r\n        <Checkbox type=\"checkbox\" checked={done} onChange={toggleDone} />\r\n        <FontAwesomeIcon icon={done ? faCheckSquare : faSquare} size=\"2x\" />\r\n      </CheckboxWrapper>\r\n      <TextArea\r\n        value={content}\r\n        onChange={({ currentTarget }) => updateText(currentTarget.value)}\r\n        placeholder=\"...\"\r\n      />\r\n      <Button onClick={deleteTodo}>\r\n        <FontAwesomeIcon icon={faTimes} />\r\n      </Button>\r\n    </StyledTodo>\r\n  );\r\n};\r\n\r\ninterface IStyledTodoProps {\r\n  done: boolean;\r\n}\r\nconst StyledTodo = styled.div<IStyledTodoProps>`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  height: 50px;\r\n  position: relative;\r\n\r\n  &::after {\r\n    ${({ done }) => (done ? `content:\"\";` : \"\")}\r\n    position: absolute;\r\n    height: 2px;\r\n    background-color: ${({ theme }) => theme.colors.grey600};\r\n    left: 35px;\r\n    right: 50px;\r\n  }\r\n`;\r\n\r\nconst CheckboxWrapper = styled.span`\r\n  display: flex;\r\n  align-items: inherit;\r\n  justify-content: inherit;\r\n  position: relative;\r\n  width: 35px;\r\n`;\r\n\r\nconst Checkbox = styled.input`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  opacity: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  cursor: pointer;\r\n`;\r\n","export const FIREBASE_COLLECTION_LISTS = \"todoLists\";\r\nexport const FIREBASE_COLLECTION_TODOS = \"todos\";\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const Panel: React.FC = ({ children, ...rest }) => {\r\n  return (\r\n    <StyledPanel>\r\n      <ContentWrapper role=\"region\">{children}</ContentWrapper>\r\n    </StyledPanel>\r\n  );\r\n};\r\n\r\nconst StyledPanel = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  flex: 100%;\r\n  width: 100%;\r\n  transition: all 300ms linear;\r\n  margin: 15px 0;\r\n  position: relative;\r\n  border-radius: 4px;\r\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.13);\r\n`;\r\n\r\nconst ContentWrapper = styled.div`\r\n  padding: 24px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  flex: 100%;\r\n  position: relative;\r\n  background-color: ${({ theme }) => theme.colors.surface};\r\n  color: ${({ theme }) => theme.colors.textOnSurface};\r\n  border-radius: 4px;\r\n`;\r\n","import React from \"react\";\r\nimport { TTodoList, TTodo } from \"../../../../types\";\r\nimport { useFirestore, useFirestoreConnect } from \"react-redux-firebase\";\r\nimport {\r\n  FIREBASE_COLLECTION_LISTS,\r\n  FIREBASE_COLLECTION_TODOS\r\n} from \"../../../../constants/firebase\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { Todo } from \"../todo\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { TAppState } from \"../../../../store/store\";\r\nimport { Col } from \"react-grid-system\";\r\nimport styled from \"styled-components\";\r\nimport { Panel } from \"../../../../common/components/panel\";\r\nimport { Button } from \"../../../../common/components/button\";\r\nimport partition from \"lodash.partition\";\r\n\r\ninterface props {\r\n  todoList: TTodoList;\r\n}\r\n\r\nexport const TodoList: React.FC<props> = ({ todoList }) => {\r\n  const { id, name } = todoList;\r\n\r\n  useFirestoreConnect([\r\n    {\r\n      collection: \"todoLists\",\r\n      doc: id,\r\n      subcollections: [\r\n        {\r\n          collection: FIREBASE_COLLECTION_TODOS\r\n        }\r\n      ],\r\n      orderBy: [[\"createdDate\", \"desc\"]],\r\n      storeAs: `${FIREBASE_COLLECTION_TODOS}_${id}`\r\n    }\r\n  ]);\r\n\r\n  const firestore = useFirestore();\r\n\r\n  const todos: TTodo[] = useSelector(\r\n    ({ firestore }: TAppState) =>\r\n      firestore.ordered[`${FIREBASE_COLLECTION_TODOS}_${id}`]\r\n  );\r\n\r\n  const [done, todo] = partition(todos, { done: true });\r\n\r\n  const deleteTodoList = () => {\r\n    firestore.delete(`${FIREBASE_COLLECTION_LISTS}/${id}`);\r\n  };\r\n\r\n  const addTodo = () => {\r\n    firestore\r\n      .collection(FIREBASE_COLLECTION_LISTS)\r\n      .doc(id)\r\n      .collection(FIREBASE_COLLECTION_TODOS)\r\n      .add({\r\n        content: \"\",\r\n        createdDate: new Date(),\r\n        modifiedDate: new Date(),\r\n        done: false\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Col xs={12} lg={6} xl={4}>\r\n      <Panel>\r\n        <ListHeader>\r\n          <Title>{name}</Title>\r\n          <Actions>\r\n            <Button onClick={addTodo}>\r\n              <FontAwesomeIcon icon={faPlus} />\r\n            </Button>\r\n          </Actions>\r\n        </ListHeader>\r\n        <>\r\n          {todos && (\r\n            <>\r\n              {todo.map(todo => (\r\n                <Todo key={todo.id} todo={todo} parentId={id!} />\r\n              ))}\r\n              {done.map(todo => (\r\n                <Todo key={todo.id} todo={todo} parentId={id!} />\r\n              ))}\r\n            </>\r\n          )}\r\n\r\n          {todos && todos.length === 0 && (\r\n            <Delete>\r\n              This list is Empty delete it?{\" \"}\r\n              <Button onClick={deleteTodoList}>Delete</Button>\r\n            </Delete>\r\n          )}\r\n        </>\r\n      </Panel>\r\n    </Col>\r\n  );\r\n};\r\n\r\nconst ListHeader = styled.div`\r\n  display: flex;\r\n  flex-wrap: no-wrap;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  margin-bottom: 24px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  margin: 0;\r\n  display: flex;\r\n  flex: 5;\r\n`;\r\n\r\nconst Actions = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst Delete = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  useFirestoreConnect,\r\n  useFirestore,\r\n  isLoaded\r\n} from \"react-redux-firebase\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { TAppState } from \"../../store/store\";\r\nimport {\r\n  FIREBASE_COLLECTION_LISTS,\r\n  FIREBASE_COLLECTION_TODOS\r\n} from \"../../constants/firebase\";\r\nimport { TTodoList } from \"../../types\";\r\nimport { TodoList } from \"./components/todoList\";\r\nimport { Container, Row, Col } from \"react-grid-system\";\r\nimport { Panel } from \"../../common/components/panel\";\r\nimport { TextArea } from \"../../common/components/textArea\";\r\nimport { Button } from \"../../common/components/button\";\r\n\r\nexport const TodoLists: React.FC = () => {\r\n  useFirestoreConnect([\r\n    {\r\n      collection: \"todoLists\",\r\n      orderBy: [\"createdDate\", \"desc\"]\r\n    }\r\n  ]);\r\n  const firestore = useFirestore();\r\n\r\n  const todoLists: TTodoList[] = useSelector(\r\n    ({ firestore }: TAppState) => firestore.ordered.todoLists\r\n  );\r\n\r\n  const [listName, setListName] = useState(\"\");\r\n\r\n  const addList = async () => {\r\n    if (listName === \"\") return;\r\n    const todoList: TTodoList = {\r\n      name: listName,\r\n      createdDate: new Date()\r\n    };\r\n\r\n    setListName(\"\");\r\n\r\n    const created = await firestore\r\n      .collection(FIREBASE_COLLECTION_LISTS)\r\n      .add(todoList);\r\n\r\n    firestore\r\n      .collection(FIREBASE_COLLECTION_LISTS)\r\n      .doc(created.id)\r\n      .collection(FIREBASE_COLLECTION_TODOS)\r\n      .add({\r\n        content: \"\",\r\n        createdDate: new Date(),\r\n        modifiedDate: new Date(),\r\n        done: false\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container fluid={true}>\r\n      <Row>\r\n        <Col xs={12} md={6} xl={4} offset={{ xs: 0, md: 3, xl: 4 }}>\r\n          <Panel>\r\n            <TextArea\r\n              value={listName}\r\n              onChange={({ currentTarget }) => setListName(currentTarget.value)}\r\n              placeholder=\"Add new list\"\r\n            />\r\n            <Button onClick={addList} disabled={listName.length === 0}>\r\n              Add list\r\n            </Button>\r\n          </Panel>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        {!isLoaded(todoLists) ? (\r\n          <span>Loading...</span>\r\n        ) : (\r\n          todoLists.map(tl => <TodoList todoList={tl} key={tl.id} />)\r\n        )}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\r\nimport { useFirebase } from \"react-redux-firebase\";\r\nimport * as fb from \"firebase/app\";\r\n\r\nexport const Login: React.FC = () => {\r\n  const firebase = useFirebase();\r\n\r\n  return (\r\n    <div>\r\n      <h1>Please sign in using one of the providers below</h1>\r\n      <StyledFirebaseAuth\r\n        uiConfig={{\r\n          signInFlow: \"popup\",\r\n          signInSuccessUrl: \"/signedIn\",\r\n          signInOptions: [\r\n            fb.auth.GoogleAuthProvider.PROVIDER_ID,\r\n            fb.auth.EmailAuthProvider.PROVIDER_ID\r\n          ]\r\n        }}\r\n        firebaseAuth={firebase.auth()}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { ConnectedRouter } from \"connected-react-router\";\r\nimport React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { history, TAppState } from \"./store/store\";\r\nimport { TodoLists } from \"./features/todoLists\";\r\nimport { Login } from \"./features/auth/login\";\r\nimport { isLoaded, isEmpty } from \"react-redux-firebase\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Routing: React.FC = () => {\r\n  const auth = useSelector(({ firebase }: TAppState) => firebase.auth);\r\n\r\n  return window.frameElement ? null : (\r\n    <ConnectedRouter history={history}>\r\n      <Switch>\r\n        <Route path=\"*\">\r\n          {!isLoaded(auth) ? (\r\n            <span>Loading...</span>\r\n          ) : isEmpty(auth) ? (\r\n            <Login />\r\n          ) : (\r\n            <TodoLists />\r\n          )}\r\n        </Route>\r\n      </Switch>\r\n    </ConnectedRouter>\r\n  );\r\n};\r\n\r\nexport default Routing;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useFirebase, isLoaded, isEmpty } from \"react-redux-firebase\";\r\nimport { TAppState } from \"../../../store/store\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUser, faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Button } from \"../button\";\r\nimport { Container } from \"react-grid-system\";\r\n\r\nexport const Header: React.FC = () => {\r\n  const firebase = useFirebase();\r\n  const auth = useSelector(({ firebase }: TAppState) => firebase.auth);\r\n\r\n  function logout() {\r\n    return firebase.logout();\r\n  }\r\n\r\n  const authReady = isLoaded(auth) && !isEmpty(auth);\r\n\r\n  return (\r\n    <StyledHeader>\r\n      <Container>\r\n        <InnerHeader>\r\n          <div>\r\n            <Title>//TODO</Title>\r\n          </div>\r\n\r\n          <div>\r\n            <User>\r\n              <FontAwesomeIcon icon={faUser} /> {authReady && auth.displayName}\r\n            </User>\r\n            <Button onClick={logout} disabled={!authReady}>\r\n              <FontAwesomeIcon icon={faSignOutAlt} /> logout\r\n            </Button>\r\n          </div>\r\n        </InnerHeader>\r\n      </Container>\r\n    </StyledHeader>\r\n  );\r\n};\r\n\r\nconst StyledHeader = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.surface};\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  padding: 20px;\r\n  align-items: center;\r\n  box-shadow: rgba(0, 0, 0, 0.08) 0px 1px 0px 0px;\r\n`;\r\n\r\nconst InnerHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  margin: 0;\r\n`;\r\n\r\nconst User = styled.div`\r\n  margin: 0 0 8px 0;\r\n`;\r\n","import React from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport { Provider } from \"react-redux\";\r\nimport { ReactReduxFirebaseProvider } from \"react-redux-firebase\";\r\nimport { createFirestoreInstance } from \"redux-firestore\";\r\n\r\nimport configureStore from \"./store/store\";\r\nimport Routing from \"./routing\";\r\nimport { Header } from \"./common/components/header\";\r\nimport { CustomThemeProvider } from \"./themes\";\r\nimport { ScreenClassProvider } from \"react-grid-system\";\r\n\r\nconst store = configureStore();\r\n\r\n//firebase config\r\nconst fbConfig = {\r\n  apiKey: \"AIzaSyDf-LFMV8q0MbPh4xOcGd-ZdI1uNRWggIE\",\r\n  authDomain: \"loan-todo.firebaseapp.com\",\r\n  databaseURL: \"https://loan-todo.firebaseio.com\",\r\n  projectId: \"loan-todo\",\r\n  storageBucket: \"loan-todo.appspot.com\",\r\n  messagingSenderId: \"255567184855\",\r\n  appId: \"1:255567184855:web:554c9c5b343b9f7cec4192\",\r\n  measurementId: \"G-ZM5531YKM7\"\r\n};\r\n\r\n// react-redux-firebase config\r\nconst rrfConfig = {\r\n  userProfile: \"users\",\r\n  useFirestoreForProfile: true\r\n};\r\n\r\nfirebase.initializeApp(fbConfig);\r\nfirebase.firestore();\r\n\r\nconst rrfProps = {\r\n  firebase,\r\n  config: rrfConfig,\r\n  dispatch: store.dispatch,\r\n  createFirestoreInstance\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <ScreenClassProvider>\r\n      <Provider store={store}>\r\n        <CustomThemeProvider>\r\n          <ReactReduxFirebaseProvider {...rrfProps}>\r\n            <Header />\r\n            <Routing />\r\n          </ReactReduxFirebaseProvider>\r\n        </CustomThemeProvider>\r\n      </Provider>\r\n    </ScreenClassProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}